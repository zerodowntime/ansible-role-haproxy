---
# zerodowntime.haproxy/tasks/main.yml

- name: haproxy | include os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}.yml"
  tags:
    - always
    - haproxy


- name: haproxy | create system group
  become: true
  group:
    name: "{{ haproxy__group }}"
    state: present
  tags:
    - haproxy
    - haproxy::install


- name: haproxy | create system user
  become: true
  user:
    name: "{{ haproxy__user }}"
    group: "{{ haproxy__group }}"
    shell: "{{ haproxy__user_shell }}"
    system: true
    createhome: true
  tags:
    - haproxy
    - haproxy::install


- name: haproxy | install haproxy packages
  become: true
  package:
    name: "{{ haproxy__pacakge_name }}"
    state: "{{ haproxy__package_state }}"
  tags:
    - haproxy
    - haproxy::install


- name: haproxy | set permissions for the config directory
  become: true
  file:
    path: "{{ haproxy__config_path }}"
    state: directory
    owner: root
    group: root
    mode: 0755
    seuser: system_u
    serole: object_r
    setype: etc_t
  tags:
    - haproxy
    - haproxy::install
    - haproxy::configure


- name: haproxy | create haproxy extra configs dirs
  become: true
  file:
    path: "{{ haproxy__config_path }}/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0751
    seuser: system_u
    serole: object_r
    setype: etc_t
  with_items:
    - 'maps'
    - 'ssl'
    - 'ssl-auto'
    - 'conf.d'
  tags:
    - haproxy
    - haproxy::install
    - haproxy::configure


- name: haproxy | install tls certificates
  become: true
  copy:
    content: "{{ item.value }}"
    dest: "{{ haproxy__config_path }}/ssl/{{ item.key }}"
    owner: root
    group: root
    mode: 0640
    seuser: system_u
    serole: object_r
    setype: etc_t
  with_dict: "{{ haproxy__ssl_files }}"
  no_log: true
  loop_control:
    label: "{{ item.key }}"
  tags:
    - haproxy
    - haproxy::configure


- name: haproxy | configure maps files
  become: true
  template:
    src: maps/maps.j2
    dest: "{{ haproxy__config_path }}/maps/{{ item }}"
    owner: root
    group: root
    mode: 0640
    seuser: system_u
    serole: object_r
    setype: etc_t
  with_items: "{{ haproxy__map_files }}"
  notify: 'restart haproxy'
  tags:
    - haproxy
    - haproxy::configure


- name: haproxy | create config file
  become: true
  template:
    src: haproxy.cfg.j2
    dest: "{{ haproxy__config_file }}"
    owner: root
    group: root
    mode: 0640
    seuser: system_u
    serole: object_r
    setype: etc_t
    validate: 'haproxy -c -f %s'
  notify: 'restart haproxy'
  when: (haproxy__config_file is defined ) and (haproxy__config_file)
  tags:
    - haproxy
    - haproxy::configure


- name: haproxy | ensure that service is running
  become: true
  service:
    name: "{{ haproxy__service_name }}"
    state: started
  when: (haproxy__config_file is defined ) and (haproxy__config_file)
  tags:
    - haproxy
    - haproxy::running


- name: haproxy | ensure that haproxy service is enabled
  become: true
  service:
    name: "{{ haproxy__service_name }}"
    enabled: true
  tags:
    - haproxy
    - haproxy::enabled
